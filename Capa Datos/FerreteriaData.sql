-- MySQL Script generated by MySQL Workbench
-- 10/27/16 22:59:12
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema FerreteriaData
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema FerreteriaData
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `FerreteriaData` DEFAULT CHARACTER SET utf8 ;
USE `FerreteriaData` ;

-- -----------------------------------------------------
-- Table `FerreteriaData`.`Inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FerreteriaData`.`Inventario` (
  `Cod_Bodega` VARCHAR(15) NOT NULL,
  `Cod_Producto` VARCHAR(45) NOT NULL,
  `Fecha` DATETIME NULL,
  PRIMARY KEY (`Cod_Bodega`, `Cod_Producto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FerreteriaData`.`Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FerreteriaData`.`Producto` (
  `Codigo` VARCHAR(45) NOT NULL,
  `Descripcion` VARCHAR(100) NULL,
  `Unidad de medida` VARCHAR(10) NULL,
  `Precio` DOUBLE NULL,
  `Existe` BIT NULL,
  PRIMARY KEY (`Codigo`),
  CONSTRAINT `FK1_COD_PRODUCTO`
    FOREIGN KEY (`Codigo`)
    REFERENCES `FerreteriaData`.`Inventario` (`Cod_Producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FerreteriaData`.`Bodega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FerreteriaData`.`Bodega` (
  `Codigo` VARCHAR(15) NOT NULL,
  `Detalle` VARCHAR(100) NULL,
  PRIMARY KEY (`Codigo`),
  CONSTRAINT `FK1_COD_INVENTARIO`
    FOREIGN KEY (`Codigo`)
    REFERENCES `FerreteriaData`.`Inventario` (`Cod_Bodega`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FerreteriaData`.`Factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FerreteriaData`.`Factura` (
  `Cod_Factura` INT NOT NULL AUTO_INCREMENT,
  `Fecha` TIMESTAMP NULL,
  `Cod_Cliente` INT(11) NOT NULL,
  `Cod_Vendedor` VARCHAR(15) NOT NULL,
  `Detalle` VARCHAR(1000) NULL,
  `Subtotal` DOUBLE NULL,
  `Descuento` DOUBLE NULL,
  `Impuesto` DOUBLE NULL,
  `Total` DOUBLE NULL,
  `despachado` BIT NULL,
  PRIMARY KEY (`Cod_Factura`, `Cod_Cliente`, `Cod_Vendedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FerreteriaData`.`Empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FerreteriaData`.`Empleado` (
  `ID_Empleado` VARCHAR(15) NOT NULL,
  `Nombre` VARCHAR(50) NULL,
  `Clave` VARCHAR(45) NULL,
  `isAdministrador` BIT NULL,
  `isBodeguero` BIT NULL,
  `isDespachador` BIT NULL,
  `isCajero` BIT NULL,
  `isVendedor` BIT NULL,
  PRIMARY KEY (`ID_Empleado`),
  CONSTRAINT `FK1_COD_EMPLEADO`
    FOREIGN KEY (`ID_Empleado`)
    REFERENCES `FerreteriaData`.`Factura` (`Cod_Vendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FerreteriaData`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FerreteriaData`.`Cliente` (
  `ID_Cliente` INT(11) NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(50) NULL,
  `Descuento` INT(11) NULL,
  `Email` VARCHAR(50) NULL,
  `Telefono` VARCHAR(30) NULL,
  PRIMARY KEY (`ID_Cliente`),
  CONSTRAINT `FK1_COD_CLIENTE`
    FOREIGN KEY (`ID_Cliente`)
    REFERENCES `FerreteriaData`.`Factura` (`Cod_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
