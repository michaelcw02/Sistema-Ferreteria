/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import control.Control;
import java.util.LinkedList;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.productos.Producto;

/**
 *
 * @author Michael Chen W.
 */
public class VentanaVentasBuscar extends javax.swing.JFrame {

    /**
     * Creates new form VentanaVentasBuscar
     */
    public VentanaVentasBuscar(VentanaVentas vent) {
        ventas = vent;
        ctrl = ventas.getCtrl();
        initComponents();
        init();
    }
    private void init() {
        setBlank();
        setActions();
        updateTable();
    }
    private void setBlank() {
        txtFieldBusqueda1.setText("");
    }
    private void setActions() {
        addDocumentListener();
        table1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                tableAction();
            }
        });
    }
    private void updateTable() {
        LinkedList<Producto> list = ctrl.getAllProductos();
        DefaultTableModel model = (DefaultTableModel) table1.getModel();
        model.setRowCount(0);
        Object o[];
        for(Producto p : list) {
            int cant = ctrl.getSumOfProduct(p.getCodigo());
            o = new Object[]{p.getCodigo(), p.getDescripcion(), p.getUnidadMedida(), p.getPrecio(), cant};
            model.addRow(o);
        }
    }
    private void addDocumentListener() {
        
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(table1.getModel());
        table1.setRowSorter(rowSorter);
        
        txtFieldBusqueda1.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = txtFieldBusqueda1.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = txtFieldBusqueda1.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    }
    private void tableAction() {
        int row = table1.getSelectedRow();
        int column = 0;
        
        Producto p = new Producto();
        //GET CODIGO
        String value = table1.getModel().getValueAt(row, column++).toString();
        p.setCodigo(value);
        //GET DESCRIPCION
        value = table1.getModel().getValueAt(row, column++).toString();
        p.setDescripcion(value);
        //GET UNIDAD DE MEDIDA
        value = table1.getModel().getValueAt(row, column++).toString();
        p.setUnidadMedida(value);
        //GET PRECIO
        value = table1.getModel().getValueAt(row, column++).toString();
        p.setPrecio(Double.parseDouble(value));
        //GET CANTIDAD
        value = table1.getModel().getValueAt(row, column++).toString();
        
        ventas.setCantidad(Integer.parseInt(value));
        ventas.setProducto(p);
        
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        txtFieldBusqueda1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel14.setText("Ingrese el dato que deseas buscar:");

        txtFieldBusqueda1.setText("<Buscar>");
        txtFieldBusqueda1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldBusqueda1FocusGained(evt);
            }
        });
        txtFieldBusqueda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldBusqueda1ActionPerformed(evt);
            }
        });
        txtFieldBusqueda1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFieldBusqueda1KeyTyped(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Medida", "Precio", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.getTableHeader().setReorderingAllowed(false);
        table1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                table1FocusGained(evt);
            }
        });
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldBusqueda1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtFieldBusqueda1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFieldBusqueda1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldBusqueda1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldBusqueda1FocusGained

    private void txtFieldBusqueda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldBusqueda1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldBusqueda1ActionPerformed

    private void txtFieldBusqueda1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldBusqueda1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldBusqueda1KeyTyped

    private void table1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_table1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_table1FocusGained

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_table1MouseClicked

    Control ctrl;
    VentanaVentas ventas;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table1;
    private javax.swing.JTextField txtFieldBusqueda1;
    // End of variables declaration//GEN-END:variables
}
